name: Terraform CI/CD

on: [push, pull_request]

jobs:
  checkout:
    name: Checkout Code
    runs-on: ubuntu-latest
    outputs:
      ref: ${{ steps.checkout.outputs.ref }}

    steps:
      - name: Checkout code
        id: checkout
        uses: actions/checkout@v4

  init:
    name: Initialize Terraform
    runs-on: ubuntu-latest
    needs: checkout

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Terraform
        id: setup
        uses: hashicorp/setup-terraform@v3.1.1

      - name: Init
        run: terraform init

  validate:
    name: Validate Terraform
    runs-on: ubuntu-latest
    needs: init

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3.1.1

      - name: Init
        run: terraform init

      - name: Validate
        id: validate
        run: |
          terraform validate > validate_output.txt
          cat validate_output.txt
          echo "result=$(<validate_output.txt)" >> $GITHUB_ENV
        continue-on-error: true

      - name: Display Validation Result
        if: always()
        run: |
          if [[ "${{ steps.validate.outcome }}" == "success" ]]; then
            echo "✅ Validation succeeded!"
          else
            echo "❌ Validation failed!"
            cat validate_output.txt
          fi

      - name: Add Validation Result to Job Summary
        if: always()
        run: |
          echo "## Validation Result" >> $GITHUB_STEP_SUMMARY
          if [[ "${{ steps.validate.outcome }}" == "success" ]]; then
            echo "✅ Validation succeeded!" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ Validation failed!" >> $GITHUB_STEP_SUMMARY
            echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
            cat validate_output.txt >> $GITHUB_STEP_SUMMARY
            echo "\`\`\`" >> $GITHUB_STEP_SUMMARY

      - name: Annotate Validation Result
        if: always()
        run: |
          if [[ "${{ steps.validate.outcome }}" == "success" ]]; then
            echo "✅ Validation succeeded!"
          else
            echo "❌ Validation failed!"
            while IFS= read -r line; do
              echo "::error file=terraform.tf::${line}"
            done < validate_output.txt

  apply:
    name: Apply Terraform
    runs-on: ubuntu-latest
    needs: validate
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3.1.1

      - name: Setup SSH Key
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.VPS_SSH_KEY }}

      - name: Init
        run: terraform init

      - name: Apply Terraform
        run: terraform apply -auto-approve
        env:
          TF_VAR_vps_ssh_key: ${{ secrets.VPS_SSH_KEY }}

